db.aws.accessKeyId=
db.aws.secretKey=
aws.accessKeyId=
aws.secretKey=
personalstorage.name=Test Personal Storage Manager
vpg.name=Test Virtual Private Grid Manager
multi.vpg.name=Test Multi Instance Virtual Private Grid Manager
availability.zone=us-east-1b
vpc.id=vpc-be65c1da
domain=samba.ghap.io
security_group.id=sg-5872b73e
public_subnet_a.id=subnet-89012ea2
public_subnet_b.id=subnet-d9c226af
private_subnet_a.id=subnet-8f012ea4
private_subnet_b.id=subnet-c6c226b0


# Set to true when provisioning the 'vpg-provisioning' database on AWS, and false when using a dedicated/local database
use.persistence.store.in.AWS.Stack=true

enable.user.email.notifications=false

vpg-provisioning.db.nonAWS.host=127.0.0.1
#vpg-provisioning.db.nonAWS.host=52.21.234.53
vpg-provisioning.db.port=5432
vpg-provisioning.db.dbName=TESTDB
vpg-provisioning.db.user=testuser
vpg-provisioning.db.password=


idleResource.sns.topic.arn=arn:aws:sns:us-east-1:091012940692:ghap-samba-CostControls-1ICI6AFU9K2LM-GhapIdleResourcesSNSTopic-1NJSP2V1WK1G1

idleResource.scheduledStop.timeValue=15
idleResource.scheduledStop.timeUnit=SECOND

idleResource.scheduledStop.postponeStopBy.timeValue=1
idleResource.scheduledStop.postponeStopBy.timeUnit=MINUTE


compute.environment.iam.role.arn=arn:aws:iam::931961322697:role/compute-environment-role/ghap-samba-IAMStack-SUD80-GhapComputeEnvironmentRo-EZLSIWWDAPIN

mail.config={\
  "smtp": {\
    "host": "email-smtp.us-east-1.amazonaws.com",\
    "port": 587,\
    "auth": true,\
    "starttls.enable": true,\
    "user": "<KEY_ID>",\
    "password": "<KEY_SECRET>"\
  },\
  "from": "ghap@certara.com"\
}

admin.email=ghap@certara.com
