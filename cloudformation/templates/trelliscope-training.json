{
  "Parameters" : {
    "ServerAccess" : {
      "Description" : "CIDR IP range allowed to login to the NAT instance",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "KeyName" : {
      "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair.",
      "Description" : "EC2 Key Pair to allow SSH access to the instance",
      "Type" : "AWS::EC2::KeyPair::KeyName"
    },
    "AvailabilityZone" : {
      "Default" : "us-west-2a",
      "Description" : "Availability Zone to create the stack in",
      "Type" : "String"
    }
  },
  "Mappings" : {
    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.20.0.0/16" },
      "Public"  : { "CIDR" : "10.20.0.0/24" }
    },
    "NatRegionMap" : {
      "us-east-1"      : { "AMI" : "ami-00381a68" },
      "us-west-2"      : { "AMI" : "ami-0bdadf3b" }
    }
  },
  "Resources" : {
    "Trelliscope2VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ] }
      }
    },
    "Trelliscope2InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "Trelliscope2PublicSubnet" : {
      "DependsOn" : ["Trelliscope2VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Trelliscope2VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ] },
      	"AvailabilityZone" : { "Ref" : "AvailabilityZone" }
      }
    },
    "Trelliscope2GatewayToInternet" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "Trelliscope2VPC" },
        "InternetGatewayId" : { "Ref" : "Trelliscope2InternetGateway" }
      }
    },
    "Trelliscope2PublicRouteTable" : {
      "DependsOn" : ["Trelliscope2VPC", "Trelliscope2InternetGateway"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "Trelliscope2VPC" }
      }
    },
    "Trelliscope2PublicRoute" : {
      "DependsOn" : ["Trelliscope2PublicRouteTable", "Trelliscope2InternetGateway" ],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "Trelliscope2PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "Trelliscope2InternetGateway" }
      }
    },
    "Trelliscope2PublicSubnetRouteTableAssociation" : {
      "DependsOn" : ["Trelliscope2PublicSubnet", "Trelliscope2PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Trelliscope2PublicSubnet" },
        "RouteTableId" : { "Ref" : "Trelliscope2PublicRouteTable" }
      }
    },
    "Trelliscope2NatSecurityGroup" : {
      "DependsOn" : [ "Trelliscope2VPC" ],
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Nat Security Group",
        "VpcId" : { "Ref" : "Trelliscope2VPC" },
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "ServerAccess" }
        },
        {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : { "Ref" : "ServerAccess" }
        },
        {
          "IpProtocol" : "tcp",
          "FromPort" : "443",
          "ToPort" : "443",
          "CidrIp" : { "Ref" : "ServerAccess" }
        }]
      }
    },
    "Trelliscope2NatSshSecurityGroupIngress" : {
      "DependsOn" : ["Trelliscope2NatSecurityGroup"],
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "22",
        "ToPort" : "22",
        "SourceSecurityGroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" }
      }
    },
    "Trelliscope2NatHttpsSecurityGroupIngress" : {
      "DependsOn" : ["Trelliscope2NatSecurityGroup"],
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "443",
        "ToPort" : "443",
        "SourceSecurityGroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" }
      }
    },
    "Trelliscope2NatHttpSecurityGroupIngress" : {
      "DependsOn" : ["Trelliscope2NatSecurityGroup"],
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "80",
        "ToPort" : "80",
        "SourceSecurityGroupId" : { "Ref" : "Trelliscope2NatSecurityGroup" }
      }
    },
    "Trelliscope2IP" : {
  		"Type" : "AWS::EC2::EIP",
  		"Properties" : {
  			"Domain" : "vpc"
  		}
  	},
  	"Trelliscope2IPAssociation" : {
  	  "Type" : "AWS::EC2::EIPAssociation",
  	  "Properties" : {
  	    "AllocationId" : { "Fn::GetAtt": [ "Trelliscope2IP", "AllocationId" ] },
  	    "InstanceId" : { "Ref" : "Trelliscope2Instance" }
  	  }
  	},
  	"Trelliscope2Volume" : {
  		"Type" : "AWS::EC2::Volume",
  		"Properties" : {
  			"AvailabilityZone" : { "Ref" : "AvailabilityZone" },
  			"Encrypted" : true,
  			"VolumeType" : "gp2",
  			"Size" : 500
  		}	
  	},
    "Trelliscope2Instance" : {
    	"Type" : "AWS::EC2::Instance",
      "DependsOn" : [ "Trelliscope2Volume" ],
      "Properties" : {
      	"AvailabilityZone" : { "Ref" : "AvailabilityZone" },
      	"SourceDestCheck" : false,
        "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": "c3.4xlarge",
        "NetworkInterfaces" : [ {
        	"GroupSet" : [{ "Ref" : "Trelliscope2NatSecurityGroup" }],
        	"AssociatePublicIpAddress" : true,
        	"DeviceIndex": "0",
        	"DeleteOnTermination": true,
        	"SubnetId" : { "Ref" : "Trelliscope2PublicSubnet" }
        }],
        "KeyName" : {
          "Ref" : "KeyName"
        },
        "UserData" : {
          "Fn::Base64" : {
          "Fn::Join" : [
            "", [
                "#!/bin/bash\n",
                "hostname trelliscope\n",
                "mkdir /opt/trelliscope\n",
                "cfn-init -s ", { "Ref": "AWS::StackName" },
                "         -r Trelliscope2Instance ",
                "         --region ", { "Ref" : "AWS::Region" },
                "         -c InstallAndRun \n",
                "# Signal the status from cfn-init\n",
                "cfn-signal -e $? ",
                "           --stack=", { "Ref" : "AWS::StackName" },
                "           --region ", { "Ref" : "AWS::Region" },
                "           --resource=Trelliscope2Instance \n"
            ]
          ]}
      	}
    	},
     	"Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "InstallAndRun" : [ "trelliscopeinit" ]
          },
          "trelliscopeinit" : {
            "packages": {
              "yum" : {
                "libcurl-devel" : [],
                "openssl-devel" : [],
                "libpng-devel" : [],
                "R" : [],
                "mod_ssl" : []
              }
            },
           	"services" : {
  	       		"sysvinit" : {
    	     			"iptables" : { "enabled" : "false", "ensureRunning" : "false"},
 	    	     		"ip6tables" : { "enabled" : "false", "ensureRunning" : "false"},
   	    	   		"postfix" : { "enabled" : "false", "ensureRunning" : "false"},
          	   	"httpd" : { "enabled" : "false", "ensureRunning" : "false" }
          		}
          	},
	 	      	"files" : {
  	 	      	"/etc/sysconfig/network" : {
    	 	      	"content" : "NETWORKING=yes\nNETWORKING_IPV6=no\nHOSTNAME=trelliscope\n"
      	 	  	},
      	 	  	"/etc/hosts" : {
      	 	  		"content" : "127.0.0.1    localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n"
      	 	  	},
      	 	  	"/etc/httpd/conf.d/proxy.conf" : {
                "content" : "ProxyPass / http://localhost:3838/\nProxyPassReverse / http://localhost:3838/\n"
              },
              "/etc/httpd/conf.d/locations.conf" : {
                "content" : { "Fn::Join" : [
                            "", [
                            "<Location />\n",
                            "AuthType Basic\n",
                            "AuthName \"Trelliscope2\"\n",
                            "AuthBasicProvider file\n",
                            "AuthUserFile /etc/httpd/passwd/passwords\n",
                            "Require valid-user\n",
                            "</Location>\n" ]
                ]}
              },
              "/etc/httpd/conf.d/rewrite.conf" : {
                "content" : { "Fn::Join" : [
                  "", ["RewriteEngine on\nRewriteCond %{HTTPS} =off\n",
                  "RewriteLog /var/log/httpd/rewrite_log\n",
                  "RewriteLogLevel 1\nRewriteRule / https://", {"Ref" : "Trelliscope2IP" },"%{REQUEST_URI} [L]\n"
                  ]
                ]}
              }
    	     	}
		  },
      	  "httpdrestart" : {
            "commands" : {
              "mkdir" : {
                "command" : "service httpd restart",
                "ignoreErrors" : "true"
              }
            }
          }
        }
      },
    	"CreationPolicy" : {
    		"ResourceSignal" : {
      		"Timeout" : "PT30M"
      	}
    	}
  	}
  }
}