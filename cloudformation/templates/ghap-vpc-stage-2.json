{
  "Description": "Cloudformation Stack that defines the VPC for the GHAP Platform",
  "Mappings": {
    "AvailabilityZone": {
      "A": {"ZONEID": "us-east-1a"},
      "B": {"ZONEID": "us-east-1c"}
    },
    "AWSNATAMI" : {
      "us-east-1"      : { "AMI" : "ami-184dc970" },
      "us-west-2"      : { "AMI" : "ami-030f4133" },
      "us-west-1"      : { "AMI" : "ami-1d2b2958" },
      "eu-west-1"      : { "AMI" : "ami-0b5b6c7f" },
      "ap-southeast-1" : { "AMI" : "ami-02eb9350" },
      "ap-southeast-2" : { "AMI" : "" },
      "ap-northeast-1" : { "AMI" : "ami-14d86d15" },
      "sa-east-1"      : { "AMI" : "ami-0439e619" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-1ccae774", "HVM64" : "ami-1ecae776", "HVMG2" : "ami-8c6b40e4"},
      "us-west-2"        : {"PV64" : "ami-ff527ecf", "HVM64" : "ami-e7527ed7", "HVMG2" : "ami-abbe919b"},
      "us-west-1"        : {"PV64" : "ami-d514f291", "HVM64" : "ami-d114f295", "HVMG2" : "ami-f31ffeb7"},
      "eu-west-1"        : {"PV64" : "ami-bf0897c8", "HVM64" : "ami-a10897d6", "HVMG2" : "ami-d5bc24a2"},
      "eu-central-1"     : {"PV64" : "ami-ac221fb1", "HVM64" : "ami-a8221fb5", "HVMG2" : "ami-7cd2ef61"},
      "ap-northeast-1"   : {"PV64" : "ami-27f90e27", "HVM64" : "ami-cbf90ecb", "HVMG2" : "ami-6318e863"},
      "ap-southeast-1"   : {"PV64" : "ami-acd9e8fe", "HVM64" : "ami-68d8e93a", "HVMG2" : "ami-3807376a"},
      "ap-southeast-2"   : {"PV64" : "ami-ff9cecc5", "HVM64" : "ami-fd9cecc7", "HVMG2" : "ami-89790ab3"},
      "sa-east-1"        : {"PV64" : "ami-bb2890a6", "HVM64" : "ami-b52890a8", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-fa39abc3", "HVM64" : "ami-f239abcb", "HVMG2" : "NOT_SUPPORTED"}
    },
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },
    "PublicSubnetConfig": {
      "A": {"CIDR": "10.10.10.0/24"},
      "B": {"CIDR": "10.10.11.0/24"}
    },
    "PrivateSubnetConfig": {
      "A": {"CIDR": "10.10.12.0/24"},
      "B": {"CIDR": "10.10.13.0/24"}
    }
  },
  "Parameters": {
    "KeyName": {
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "Description": "EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "GhapVPC" : {
      "Description": "The VPC Id",
      "Type" : "String"
    },
    "GhapInternetGateway" : {
      "Description" : "The Internet Gateway Id",
      "Type" : "String"
    },
    "Configuration" : {
      "Default" : "A",
      "AllowedValues" : ["A","B"],
      "Type" : "String"
    },
    "ServerAccess": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "Description": "CIDR IP range allowed to login to the NAT instance",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "CIDR": {
      "Default": "10.10.0.0/16",
      "Type" : "String"
    },
    "Domain": {
      "Description": "Domain to configure this is either ghap.io.,dev.ghap.io. or qa.ghap.io.",
      "Default": "ghap.io.",
      "Type": "String"
    },
    "DeploymentTarget" : {
      "Description" : "Deployment Target, this is either prod or dev",
      "Default" : "prod",
      "AllowedValues" : ["prod", "qa","devtest", "samba"],
      "Type" : "String"
    },
    "BastionInstanceType" : {
      "Description" : "Bastion Host EC2 instance type",
      "Default" : "m3.medium",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type.",
      "Type" : "String"
    },
    "NATInstanceType" : {
      "Description" : "NAT Device EC2 instance type",
      "Default" : "m3.medium",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type.",
      "Type" : "String"
    },
    "GhapNatSecurityGroup" : {
      "Description": "Security Id for Nat Security Group",
      "Type": "String"
    }
  },
  "Resources": {
    "GhapPublicSubnet" : {
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AvailabilityZone", {"Ref" : "Configuration"}, "ZONEID" ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PublicSubnetConfig", {"Ref" : "Configuration"}, "CIDR"]},
        "VpcId" : { "Ref" : "GhapVPC" },
        "Tags" : [
          { "Key" : "Subnet", "Value" : "Public" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::Subnet"
    },
    "GhapPublicRouteTable" : {
      "Properties" : {
        "VpcId" : { "Ref" : "GhapVPC" },
        "Tags" : [
          { "Key" : "Subnet", "Value" : "Public" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::RouteTable"
    },
    "GhapPublicSubnetRouteTableAssociation" : {
      "DependsOn" : [ "GhapPublicSubnet", "GhapPublicRouteTable" ],
      "Properties" : {
        "SubnetId" : { "Ref" : "GhapPublicSubnet" },
        "RouteTableId" : { "Ref" : "GhapPublicRouteTable" }
      },
      "Type" : "AWS::EC2::SubnetRouteTableAssociation"
    },
    "GhapPublicRoute" : {
      "DependsOn" : ["GhapPublicRouteTable"],
      "Properties" : {
        "RouteTableId" : { "Ref" : "GhapPublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "GhapInternetGateway" }
      },
      "Type" : "AWS::EC2::Route"
    },
    "GhapPublicNetworkAcl" : {
      "Properties" : {
        "VpcId" : { "Ref" : "GhapVPC" },
        "Tags" : [
          { "Key" : "Network", "Value" : "Public" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::NetworkAcl"
    },
    "GhapInboundHTTPPublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId"  : {"Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapInboundHTTPSPublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId"  : {"Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapInboundSSHPublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId"  : {"Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "22", "To" : "22"}
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapInboundEphemeralPublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId"  : {"Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapInboundPrivatePublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId"  : {"Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "104",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "10.10.0.0/16",
        "PortRange" : {"From" : "0", "To" : "65535"}
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapOutboundPublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId" : { "Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapOutboundPrivatePublicNetworkAclEntry" : {
      "DependsOn" : ["GhapPublicNetworkAcl"],
      "Properties" : {
        "NetworkAclId" : { "Ref" : "GhapPublicNetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "10.10.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapPublicSubnetNetworkAclAssociation" : {
      "DependsOn" : [ "GhapPublicSubnet", "GhapPublicNetworkAcl"],
      "Properties" : {
        "SubnetId" : { "Ref" : "GhapPublicSubnet" },
        "NetworkAclId" : { "Ref" : "GhapPublicNetworkAcl" }
      },
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation"
    },
    "GhapPrivateSubnet" : {
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AvailabilityZone", {"Ref" : "Configuration"}, "ZONEID" ]},
        "CidrBlock" : { "Fn::FindInMap" : [ "PrivateSubnetConfig", {"Ref" : "Configuration"}, "CIDR" ]},
        "VpcId" : { "Ref" : "GhapVPC" },
        "Tags" : [
          { "Key" : "Subnet", "Value" : "Public" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::Subnet"
    },
    "GhapPrivateRouteTable" : {
      "Properties" : {
        "VpcId" : { "Ref" : "GhapVPC" },
        "Tags" : [
          { "Key" : "Subnet", "Value" : "Private" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::RouteTable"
    },
    "GhapPrivateSubnetRouteTableAssociation" : {
      "DependsOn" : [ "GhapPrivateSubnet", "GhapPrivateRouteTable"],
      "Properties" : {
        "SubnetId" : { "Ref" : "GhapPrivateSubnet" },
        "RouteTableId" :  { "Ref" : "GhapPrivateRouteTable" }
      },
      "Type" : "AWS::EC2::SubnetRouteTableAssociation"
    },
    "GhapPrivateRoute" : {
      "DependsOn" : [ "GhapPrivateRouteTable", "GhapNatDevice"],
      "Properties" : {
        "RouteTableId" : { "Ref" : "GhapPrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "GhapNatDevice"}
      },
      "Type" : "AWS::EC2::Route"
    },
    "GhapPrivateNetworkAcl" : {
      "Properties" : {
        "VpcId" : {"Ref":"GhapVPC"},
        "Tags" : [
          { "Key" : "Network", "Value" : "Private" },
          { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
        ]
      },
      "Type" : "AWS::EC2::NetworkAcl"
    },
    "GhapInboundPrivateNetworkAclEntry" : {
      "Properties" : {
        "NetworkAclId" : { "Ref" : "GhapPrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapOutboundPrivateNetworkAclEntry" : {
      "Properties" : {
        "NetworkAclId" : { "Ref" : "GhapPrivateNetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "Allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      },
      "Type" : "AWS::EC2::NetworkAclEntry"
    },
    "GhapPrivateSubnetNetworkAclAssociation" : {
      "Properties" : {
        "SubnetId" : { "Ref" : "GhapPrivateSubnet" },
        "NetworkAclId" : {"Ref" : "GhapPrivateNetworkAcl" }
      },
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation"
    },
    "GhapNatDevice": {
      "DependsOn": [ "GhapPublicSubnet" ],
      "Properties": {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AvailabilityZone", {"Ref" : "Configuration"}, "ZONEID" ]},
        "ImageId" : {
          "Fn::FindInMap" : [
            "AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI"
          ]
        },
        "InstanceType" : { "Ref" : "NATInstanceType" },
        "SecurityGroupIds": [ { "Ref": "GhapNatSecurityGroup" } ],
        "SourceDestCheck": false,
        "KeyName": { "Ref": "KeyName" },
        "SubnetId": { "Ref": "GhapPublicSubnet" }
      },
      "Type": "AWS::EC2::Instance"
    },
    "GhapNatIpAddress": {
      "DependsOn": [ "GhapNatDevice" ],
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref": "GhapNatDevice" }
      },
      "Type": "AWS::EC2::EIP"
    },
    "GhapBastionSecurityGroup" : {
      "Properties" : {
        "GroupDescription" : "Enable access to the Bastion host",
        "VpcId" : { "Ref" : "GhapVPC" },
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "6",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Ref" : "ServerAccess" }
          }
        ],
        "SecurityGroupEgress"  : [
          {
            "IpProtocol" : "6",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Fn::FindInMap" : [ "PrivateSubnetConfig", {"Ref" : "Configuration"}, "CIDR" ]}
          }
        ],
        "SecurityGroupEgress"  : [
          {
            "IpProtocol" : "-1",
            "FromPort" : "53",
            "ToPort" : "53",
            "CidrIp" : { "Fn::FindInMap" : [ "PrivateSubnetConfig", {"Ref" : "Configuration"}, "CIDR" ]}
          }
        ]
      },
      "Type" : "AWS::EC2::SecurityGroup"
    },
    "BastionHost" : {
     "Properties" : {
       "InstanceType" : { "Ref" : "BastionInstanceType" },
       "KeyName"  : { "Ref" : "KeyName" },
       "SubnetId" : { "Ref" : "GhapPublicSubnet" },
       "ImageId"  : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "BastionInstanceType" }, "Arch" ] } ] },
       "SecurityGroupIds" : [{ "Ref" : "GhapBastionSecurityGroup" }],
       "Tags" : [
         { "Key" : "DeploymentTarget", "Value": {"Ref" : "DeploymentTarget" }}
       ]
      },
      "Type" : "AWS::EC2::Instance"
    },
    "GhapBastionIpAddress": {
      "DependsOn": [ "BastionHost" ],
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref": "BastionHost" }
      },
      "Type": "AWS::EC2::EIP"
    },
    "BastionDnsEntry" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : {"Ref" : "Domain"},
        "Comment" : "DNS name for Bastion Instance",
        "Type" : "A",
        "TTL" : "900",
        "Name" : {"Fn::Join" : ["", [ "bastion-",{"Ref":"Configuration"},".",{ "Ref" : "Domain" }]]},
        "ResourceRecords" : [ { "Ref" : "GhapBastionIpAddress" } ]
      }
    }
  },
  "Outputs" : {
    "GhapPrivateSubnetOutput" : {
      "Value" : { "Ref" : "GhapPrivateSubnet" },
      "Description" : "Private Subnet Configuration"
    },
    "GhapPublicSubnetOutput" : {
      "Value" : { "Ref" : "GhapPublicSubnet" },
      "Description" : "Public Subnet Configuration"
    }
  }
}
