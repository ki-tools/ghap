{
  "Description" : "Cloudformation Stack for Shared Curator Env",
  "Mappings": {
    "AvailabilityZone": {
      "A": { "ZONEID": "us-east-1a" },
      "B": { "ZONEID": "us-east-1c" }
    }
  },
  "Parameters": {
    "KeyName": {
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "Description": "EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "ServerAccess": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "Description": "CIDR IP range allowed to login to the NAT instance",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "WebServerInstanceProfile" : {
      "Description": "The Web Server Instance Profile Id",
      "Type": "String"
    },
    "GhapVPC": {
      "ConstraintDescription": "The VPC Id",
      "Description": "The VPC Id",
      "Type": "String"
    },
    "GhapPrivateSubnetA": {
      "Description": "Private Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPrivateSubnetB": {
      "Description": "Private Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPublicSubnetA": {
      "Description": "Public Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPublicSubnetB": {
      "Description": "Public Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapWindowsEnvSecurityGroup" : {
      "Description": "Security Id for Nat Security Group",
      "Type": "String"
    },
    "Domain": {
      "Description": "The domain or subdomain to be used.",
      "Type": "String",
      "ConstraintDescription" : "Must specify ghap.io or dev.ghap.io.",      
      "AllowedValues" : ["ghap.io.", "samba.ghap.io.", "dev.ghap.io.", "qa.ghap.io."]
    },
    "DeploymentTarget" : {
      "Description" : "Deployment Target, this is either prod,qa or devtest",
      "AllowedValues" : ["prod", "qa","devtest", "samba"],
      "Type" : "String",
      "Default" : "prod"
    }  
  },
  "Resources" : {
    "GhapSharedCuratorInstance": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::FindInMap": [
            "AvailabilityZone",
            "A",
            "ZONEID"
          ]
        },
        "ImageId": "ami-9b08eaf0",
        "InstanceType": "c3.4xlarge",
        "KeyName": {"Ref": "KeyName"},
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeleteOnTermination": true,
            "DeviceIndex": "0",
            "GroupSet": [{"Ref": "GhapWindowsEnvSecurityGroup"}],
            "SubnetId": {"Ref": "GhapPublicSubnetA"}
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -s ",
                {"Ref": "AWS::StackId"},
                " -r GhapSharedCuratorInstance",
                " --region ",
                {"Ref": "AWS::Region"},
                "\n",
                "</script>"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {"Ref": "AWS::StackId"},
                      "\n",
                      "region=",
                      {"Ref": "AWS::Region"},
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.GhapSharedCuratorInstance.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {"Ref": "AWS::StackId"},
                      " -r GhapSharedCuratorInstance",
                      " --region ",
                      {"Ref": "AWS::Region"},
                      "\n"
                    ]
                  ]
                }
              }
            }
          },
          "commands": {
            "join-domain": {
              "Fn::Join": [
                "",
                [
                  "netdom /Domain:prod.ghap.io /user:Administrator /password: MEMBER ",
                  "curators",
                  " /JOINDOMAIN\n"
                ]
              ]
            }
          },
          "services": {
            "windows": {
              "cfn-hup": {
                "enabled": "true",
                "ensureRunning": "true",
                "files": [
                  "c:\\cfn\\cfn-hup.conf",
                  "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                ]
              }
            }
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "GhapSharedCuratorEnvInstanceIP": {
      "DependsOn": ["GhapSharedCuratorInstance"],
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {"Ref": "GhapSharedCuratorInstance"}
      },
      "Type": "AWS::EC2::EIP"
    },
    "SharedCuratorEnvDnsEntry": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {"Ref": "Domain"},
        "Comment": "DNS name for Shared Curator Instance",
        "Type": "A",
        "TTL": "900",
        "Name": {
          "Fn::Join": [
            ".",
            [
              "curators",
              {"Ref": "Domain"}
            ]
          ]
        },
        "ResourceRecords": [{"Ref": "GhapSharedCuratorEnvInstanceIP"}]
      }
    }
  }
}
