{
  "Description" : "Cloudformation Stack for Backup Server",
  "Mappings": {
    "AvailabilityZone": {
      "A": { "ZONEID": "us-east-1a" },
      "B": { "ZONEID": "us-east-1c" }
    }
  },
  "Parameters": {
    "KeyName": {
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "Description": "EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "ServerAccess": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "Description": "CIDR IP range allowed to login to the NAT instance",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "WebServerInstanceProfile" : {
      "Description": "The Web Server Instance Profile Id",
      "Type": "String"
    },
    "GhapVPC": {
      "ConstraintDescription": "The VPC Id",
      "Description": "The VPC Id",
      "Type": "String"
    },
    "GhapPrivateSubnetA": {
      "Description": "Private Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPrivateSubnetB": {
      "Description": "Private Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPublicSubnetA": {
      "Description": "Public Subnet Id for Availability Zone",
      "Type": "String"
    },
    "GhapPublicSubnetB": {
      "Description": "Public Subnet Id for Availability Zone",
      "Type": "String"
    },
    "Domain": {
      "Description": "The domain or subdomain to be used.",
      "Type": "String",
      "ConstraintDescription" : "Must specify ghap.io, dev.ghap.io., or qa.ghap.io.",
      "AllowedValues" : ["ghap.io."]
    },
    "DeploymentTarget" : {
      "Description" : "Deployment Target, this is either prod, devtest, qa",
      "AllowedValues" : ["prod"],
      "Type" : "String",
      "Default" : "prod"
    },
    "GhapNatSecurityGroup" : {
      "Description": "Security Id for Nat Security Group",
      "Type": "String"
    },
    "GhapBackupSecurityGroup" : {
      "Description": "Security Id for Nat Security Group",
      "Type": "String"
    },
    "S3Backup": {
      "Description": "The Backup s3 bucket",
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateDevTestResources": {
      "Fn::Or" : [
        {
          "Fn::Equals": [
            {"Ref": "DeploymentTarget"},
            "devtest"
          ]
        },
        {
          "Fn::Equals": [
            {"Ref": "DeploymentTarget"},
            "qa"
          ]
        },
        {
          "Fn::Equals": [
            {"Ref": "DeploymentTarget"},
            "samba"
          ]
        }
      ]
    },
    "CreateProdResources": {
      "Fn::Equals": [
        {"Ref": "DeploymentTarget"},
        "prod"
      ]
    }
  },
  "Resources" : {
    "GhapBackupInstance": {
      "Condition" : "CreateProdResources",
      "CreationPolicy": {
        "ResourceSignal": { "Timeout": "PT30M" }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "InstallAndRun": [
              "backupinit"
            ]
          },
          "backupinit": {
            "files": {
              "/etc/hosts": {
                "content": "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n"
              },
              "/etc/sysconfig/network": {
                "content": "NETWORKING=yes\nNETWORKING_IPV6=no\nHOSTNAME=backup.ghap.io\n"
              }
            },
            "services": {
              "sysvinit": {
                "httpd": {
                  "enabled": "false",
                  "ensureRunning": "false"
                },
                "ip6tables": {
                  "enabled": "false",
                  "ensureRunning": "false"
                },
                "iptables": {
                  "enabled": "false",
                  "ensureRunning": "false"
                },
                "postfix": {
                  "enabled": "false",
                  "ensureRunning": "false"
                }
              }
            }
          }
        }
      },
      "Properties": {
        "AvailabilityZone": { "Fn::FindInMap": [ "AvailabilityZone", "A", "ZONEID" ] },
        "ImageId": "ami-00381a68",
        "InstanceType": "t2.medium",
        "KeyName": { "Ref": "KeyName" },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": false,
            "DeleteOnTermination": true,
            "DeviceIndex": "0",
            "GroupSet": [ { "Ref": "GhapBackupSecurityGroup" }, { "Ref" : "GhapNatSecurityGroup"} ],
            "SubnetId": { "Ref": "GhapPrivateSubnetA" }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "hostname backup\n",
                "cfn-init -s ",
                {
                  "Ref": "AWS::StackName"
                },
                "         -r GhapBackupInstance ",
                "         -c InstallAndRun \n",
                "# Signal the status from cfn-init\n",
                "cfn-signal -e $? ",
                "           --stack=",
                { "Ref": "AWS::StackName" },
                "           --resource=GhapBackupInstance \n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    }
  }
}
